{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,KAAMC,SAASC,cAAc,UAiC/B,SAASC,EAAcC,EAAUC,GAa/B,OAZgB,IAAIC,SAAQ,SAACC,EAASC,GACpC,IAAMC,EAAgBC,KAAKC,SAAW,GAChCC,EAAM,CAAER,WAAUC,SAExBQ,YAAW,WACLJ,EACFF,EAAQK,GAERJ,EAAOI,E,GAERP,E,IAzCPN,EAAKC,KAAKc,iBAAiB,UAE3B,SAA0BC,GACxBA,EAAEC,iBAEF,IAAMC,EAAaC,OAAOnB,EAAKC,KAAKmB,SAASd,MAAMe,OAC7CC,EAAOH,OAAOnB,EAAKC,KAAKmB,SAASE,KAAKD,OACtCE,EAASJ,OAAOnB,EAAKC,KAAKmB,SAASG,OAAOF,OAEhDrB,EAAKC,KAAKuB,QAEV,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAAQE,IAC1BrB,EAAcqB,EAAI,EAAGP,EAAaI,EAAOG,GACtCC,MAAK,SAAAC,G,IAAGtB,EAAQsB,EAARtB,SAAUC,EAAKqB,EAALrB,MACjBR,EAAA8B,OAAOC,QAAQ,uBAAwCC,OAAfzB,EAAS,QAAYyB,OAANxB,EAAM,MAAK,CAC9DD,SAAQ,YACV0B,cAAc,EACdC,QAAS,K,IAGZC,OAAM,SAAAN,G,IAAGtB,EAAQsB,EAARtB,SAAUC,EAAKqB,EAALrB,MAClBR,EAAA8B,OAAOM,QAAQ,sBAAqCJ,OAAfzB,EAAS,QAAYyB,OAANxB,EAAM,MAAK,CAC7DD,SAAU,YACV0B,cAAc,EACdC,QAAS,K","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  form: document.querySelector('.form'),\n};\n\nrefs.form.addEventListener('submit', onCreateBtnClick);\n\nfunction onCreateBtnClick(e) {\n  e.preventDefault();\n\n  const firstDelay = Number(refs.form.elements.delay.value);\n  const step = Number(refs.form.elements.step.value);\n  const amount = Number(refs.form.elements.amount.value);\n\n  refs.form.reset();\n\n  for (let i = 0; i < amount; i++) {\n    createPromise(i + 1, firstDelay + step * i)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`, {\n          position: 'right-top',\n          clickToClose: true,\n          timeout: 3000,\n        });\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`, {\n          position: 'right-top',\n          clickToClose: true,\n          timeout: 3000,\n        });\n      });\n  }\n}\n\nfunction createPromise(position, delay) {\n  const promise = new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    const obj = { position, delay };\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(obj);\n      } else {\n        reject(obj);\n      }\n    }, delay);\n  });\n  return promise;\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$refs","form","document","querySelector","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","obj","setTimeout","addEventListener","e","preventDefault","firstDelay","Number","elements","value","step","amount","reset","i","then","param","Notify","success","concat","clickToClose","timeout","catch","failure"],"version":3,"file":"03-promises.2caf0a82.js.map"}